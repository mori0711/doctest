=====================
Sphinxのインストール
=====================

事前準備
========
* python
* (pip)
* (virtualenv)


インストール
=============
terminalやコマンドプロンプトを起動します。

.. code-block:: bash

    $ pip install sphinx


sphinx-quickstart というコマンドが使えるようになっていればインストール完了です。

グローバル環境にインストールするのが嫌な人は、

.. code-block:: bash

    virtualenv env
    source env/bin/activate


とするか、virtualenvwrapperを使ったりしてください。


うまくいかない時用
===================
* `Windowsへのインストール <http://sphinx-users.jp/gettingstarted/install_windows.html>`_
* `Windowsへのインストール(スタンドアロンインストール)  <http://sphinx-users.jp/gettingstarted/install_windows_standalone.html>`_
* `Mac OS X, Linuxへのインストール  <http://sphinx-users.jp/gettingstarted/install_unix.html>`_


Sphinxの動作確認
=================
Sphinxがインストールできたか確認するために、sphinx-quickstartコマンドを使ってみます。

.. code-block:: bash

    sphinx-quickstart documentname


コマンドを実行すると、対話型でドキュメントの設定を聞かれます。

Project name、Author name(s)、Project versionは入力が必須のため、何かしら入力してください。
それ以外は何も入力せずにEnterで問題ありません。


.. code-block:: bash

    sphinx-quickstart sample1

    Welcome to the Sphinx 1.2 quickstart utility.

    Please enter values for the following settings (just press Enter to
    accept a default value, if one is given in brackets).

    Selected root path: sample1

    You have two options for placing the build directory for Sphinx output.
    Either, you use a directory "_build" within the root path, or you separate
    "source" and "build" directories within the root path.
    > Separate source and build directories (y/N) [n]:

    Inside the root directory, two more directories will be created; "_templates"
    for custom HTML templates and "_static" for custom stylesheets and other static
    files. You can enter another prefix (such as ".") to replace the underscore.
    > Name prefix for templates and static dir [_]:

    The project name will occur in several places in the built documentation.
    > Project name: Sample1
    > Author name(s): Daisuke Igarashi

    Sphinx has the notion of a "version" and a "release" for the
    software. Each version can have multiple releases. For example, for
    Python the version is something like 2.5 or 3.0, while the release is
    something like 2.5.1 or 3.0a1.  If you don't need this dual structure,
    just set both to the same value.
    > Project version: 1.0.0
    > Project release [1.0.0]:

    The file name suffix for source files. Commonly, this is either ".txt"
    or ".rst".  Only files with this suffix are considered documents.
    > Source file suffix [.rst]:

    One document is special in that it is considered the top node of the
    "contents tree", that is, it is the root of the hierarchical structure
    of the documents. Normally, this is "index", but if your "index"
    document is a custom template, you can also set this to another filename.
    > Name of your master document (without suffix) [index]:

    Sphinx can also add configuration for epub output:
    > Do you want to use the epub builder (y/N) [n]:

    Please indicate if you want to use one of the following Sphinx extensions:
    > autodoc: automatically insert docstrings from modules (y/N) [n]:
    > doctest: automatically test code snippets in doctest blocks (y/N) [n]:
    > intersphinx: link between Sphinx documentation of different projects (y/N) [n]:
    > todo: write "todo" entries that can be shown or hidden on build (y/N) [n]:
    > coverage: checks for documentation coverage (y/N) [n]:
    > pngmath: include math, rendered as PNG images (y/N) [n]:
    > mathjax: include math, rendered in the browser by MathJax (y/N) [n]:
    > ifconfig: conditional inclusion of content based on config values (y/N) [n]:
    > viewcode: include links to the source code of documented Python objects (y/N) [n]:

    A Makefile and a Windows command file can be generated for you so that you
    only have to run e.g. `make html' instead of invoking sphinx-build
    directly.
    > Create Makefile? (Y/n) [y]:
    > Create Windows command file? (Y/n) [y]:

    Creating file sample1/conf.py.
    Creating file sample1/index.rst.
    Creating file sample1/Makefile.
    Creating file sample1/make.bat.

    Finished: An initial directory structure has been created.

    You should now populate your master file sample1/index.rst and create other documentation
    source files. Use the Makefile to build the docs, like so:
    make builder
    where "builder" is one of the supported builders, e.g. html, latex or linkcheck.


これでSphinxのプロジェクトが出来ました。

プロジェクトができたら、htmlをビルドしてみましょう。

.. code-block:: bash

    cd sample1
    make html
    open _build/html/index.html


_buildというディレクトリが作成され、_build/html/index.htmlが生成されます。

ファイルを開いて確認してみてください。

同様に、epubもビルドしてみます。

.. code-block:: bash

    make epub
    open _build/epub/Sample1.epub


中身はありませんが、epubも生成できました。

これで準備ができました。

